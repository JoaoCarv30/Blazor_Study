@page "/"
@using Blazorwind.Models
@layout Blazorwind.Layout.NavLayout

<PageTitle>Home</PageTitle>

<div class="container mx-auto px-4 py-6">
    <div class="text-center mb-8">
        <h1 class="font-extrabold text-4xl bg-gradient-to-r from-[#8B4067] via-[#6FBCCC] to-[#FB8331] bg-clip-text text-transparent">
            Welcome to Ego Store!
        </h1>

        <h3 class="text-gray-500 mt-1">
            Here do you find the best products for you!
        </h3>
    </div>

    @if (products.Count > 0)
    {
        <section class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4">
            @foreach (var product in products)
            {
                <div class="bg-white shadow rounded-md overflow-hidden transition-transform duration-200 hover:shadow-md hover:translate-y-[-2px] flex flex-col h-full">
                    <div class="aspect-square w-full overflow-hidden bg-gray-50 flex items-center justify-center">
                        <img src="@product.Image" alt="@product.Title" class="max-h-32 max-w-full object-contain p-2">
                    </div>
                    <div class="p-3 flex flex-col flex-grow">
                        <h2 class="text-sm font-bold text-blue-950 line-clamp-2 mb-1">@product.Title</h2>
                        <p class="text-xs text-gray-600 line-clamp-2 mb-2">@product.Description</p>
                        <p class="text-blue-950 font-bold mt-auto text-sm">R$ @product.Price</p>
                    </div>
                </div>
            }
        </section>
    }
    else
    {
        <div class="flex items-center justify-center py-16">
            <div class="loader">
                <div class="loader__bar"></div>
                <div class="loader__bar"></div>
                <div class="loader__bar"></div>
                <div class="loader__bar"></div>
                <div class="loader__bar"></div>
                <div class="loader__ball"></div>
            </div>
        </div>
    }
</div>

<style>
    .aspect-square {
        aspect-ratio: 1 / 1;
    }
</style>

@code {
    private List<ProductModel> products = new List<ProductModel>();

    [Inject]
    private HttpClient Http { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<ProductModel>>("https://fakestoreapi.com/products");
    }
}